stages:
  - build
  - test
  - deploy

variables:
  REGISTRY_URL: $REGISTRY_URL
  DOCKER_IMAGE: "$REGISTRY_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"

build-job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Logging in to Docker Registry"
    - docker login $REGISTRY_URL -u $REGISTRY_LOGIN -p $REGISTRY_PASS
    - echo "Building Docker image"
    - docker build -t $DOCKER_IMAGE .
    - echo "Pushing Docker image"
    - docker push $DOCKER_IMAGE
  only:
    - main
    - dev

test-job:
  stage: test
  image: python:3.9
  script:
    - echo "Running tests (coming soon...)"
  only:
    - main
    - dev

deploy-dev-job:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - echo "Setting up Kubernetes config for Dev"
    - echo $DEV_KUBECONFIG | base64 -d > kubeconfig
  script:
    - echo "Deploying to Kubernetes Dev environment"
    - kubectl --kubeconfig=kubeconfig -n aktzf-graveldispatchqueue-dev apply -f kubernetes/deployment.yaml
    - kubectl --kubeconfig=kubeconfig -n aktzf-graveldispatchqueue-dev apply -f kubernetes/service.yaml
  only:
    - dev

deploy-prod-job:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - echo "Setting up Kubernetes config for Prod"
    - echo $PROD_KUBECONFIG | base64 -d > kubeconfig
  script:
    - echo "Deploying to Kubernetes Prod environment"
    - kubectl --kubeconfig=kubeconfig -n aktzf-graveldispatchqueue-prod apply -f kubernetes/deployment.yaml
    - kubectl --kubeconfig=kubeconfig -n aktzf-graveldispatchqueue-prod apply -f kubernetes/service.yaml
  only:
    - main
